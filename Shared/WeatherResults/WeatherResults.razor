@using BlazorTime

<div class="w-full max-w-7xl grid grid-cols-2 gap-4">
     <div class="@GLASSMORPHIC_PANEL">

        <ToLocal DateTime="@(Weather.Updated)" Format="DDDD' at 'HH:MM Z" />
        <p> Now (DT): @(Weather.Updated.ToString()) </p>
        <p> Now (UTC): @(DateTime.UtcNow.ToString()) </p>

        <p>@(Weather.Description)</p>
        @if(SelectedOption != null) {
            <hr>
            <p>@(SelectedOption.City), @(SelectedOption.Country)</p>
        }

        <WeatherIcon Url=@(Weather.IconUrl) Description=@(Weather.Description) />
     </div>
</div>


@code {
    private const string GLASSMORPHIC_PANEL = "p-4 bg-opacity-75 bg-clip-padding backdrop-filter backdrop-blur-sm bg-zinc-800 rounded-lg text-zinc-300 border border-zinc-900 border-2";

    [Parameter] public Weather Weather {get;set;} = default;
    [Parameter] public GeocodeOption? SelectedOption {get;set;} = null;

    [Inject] IReverseGeocoderService reverseGeocoder {get;set;} = null!;

    protected override async Task OnInitializedAsync()
    {
        // Attempt to reverse geocode the location the weather is located on if
        // we aren't also provided the Geocode Option
        if (SelectedOption == null)
        {
            var results = await reverseGeocoder.GetGeocodeOptions(Weather.Location);
            SelectedOption = results.FirstOrDefault(defaultValue: null);
        }
    }
}
